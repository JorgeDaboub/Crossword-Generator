Report Anagram Crossword Puzzle
Jorge Daboub

1. The user interacts with the the program throught three diferrent modes. If the user only chooses to run the program with no arguments then it will promt the user to enter words manually, (up to 20 words) or until a "." is entered. Single characters cannot be entered or words with more characters than the board length (set to 15). The user can also enter a single arguement, the name of a text file to import the words from and then have them dispalyed on the screen. The user may also enter a text file tom import from and the name of new text file to output the game instead of displaying it on the screen.

2. Internally the program uses a class named board to create and manage the game. It is inizialized with an empty board and moves on from there. It has the basic functions to dispaly the board, sort the list of words provided, add a new word. It also has two functions to read data in, one from user inputs and the other one from a text file. There is also anether function to then output the game to a file if the user chooses this option. A function to create an anagram of a word, by using the next_permutation function.

It then has specific functions to play the game, a canPlace fucntion that checks if a word can be placed in a given cooridante in accordance with the rules of the game. It checks for words not going over the bord, intersecting a word more than once, as well as have words on surronding cells. The function place then as it name states it just places a word in the board being fed the coordiantes orientation and the word. Find match checks throught the board for matching characters, so that these location can then be tested using the can be placed function. Finally the make functions brings it all togehter iterating through all the words, checking for character matches, then checking if a word can be placed there. If a word cant be placed it is temporarly stored and tried to be placed at the end of all other words, to see if a new option might have opened up. If a word cannot be placed it is outputed which words could not be placed at the bottom.

3. The output was verified by myself chekcing with combiantion I knew where possible and making sure they were all being placed properly. I tested over 20 differnet puzzule combinations, with corner cases, and found no problems. I also added words I knew could not be placed and the program properly displayed that they could not be placed.   
